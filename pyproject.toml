[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trading-platform"
version = "0.1.0"
description = "Модульная платформа для разработки и тестирования торговых моделей"
requires-python = ">=3.10"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
keywords = [
    "trading",
    "machine-learning",
    "backtesting",
    "finance",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pyarrow>=11.0.0",
    "scikit-learn>=1.3.0",
    "lightgbm>=4.0.0",
    "xgboost>=2.0.0",
    "catboost>=1.2.0",
    "torch>=2.0.0",
    "pytorch-lightning>=2.0.0",
    "ta-lib>=0.4.26",
    "pandas-ta==0.4.71b0",
    "pydantic>=2.0.0",
    "jsonschema>=4.17.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "omegaconf>=2.3.0",
    "mlflow>=2.7.0",
    "tinkoff-investments>=0.2.0b0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "loguru>=0.7.0",
    "tqdm>=4.65.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "hypothesis>=6.82.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "pylint>=2.17.0",
    "bandit>=1.7.5",
    "pre-commit>=3.3.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.0.0",
    "py-spy>=0.3.14",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "pandas-stubs>=2.3.2.250926",
    "types-PyYAML>=6.0.12.20250915",
    "types-Pygments>=2.19.0.20250809",
    "types-colorama>=0.4.15.20250801",
    "types-decorator>=5.2.0.20250324",
    "types-defusedxml>=0.7.0.20250822",
    "types-docutils>=0.22.2.20251006",
    "types-jsonschema>=4.25.1.20251009",
    "types-pytz>=2025.2.0.20250809",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
]

[project.urls]
Documentation = "https://github.com/your-username/trading-platform/tree/main/docs"
Source = "https://github.com/your-username/trading-platform"
Tracker = "https://github.com/your-username/trading-platform/issues"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "lightgbm.*",
    "xgboost.*",
    "catboost.*",
    "talib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks integration tests",
    "e2e: marks end-to-end tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.flake8]
max-line-length = 88
